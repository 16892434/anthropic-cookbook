label,text,"{""raw"":""You will classify a customer support ticket into one of the following categories\n<categories>\n    <category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\n</categories>\n\nHere is the customer support ticket:\n<ticket>\n    {{text}}\n</ticket>\n\nRespond with just the label of the category between category tags."",""display"":""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/prompt.txt"",""id"":""51f15ffab806b5e0b34bf91fd11b7fa4085f5538d5228b48a387f5d5cbabc327"",""provider"":""Haiku: T-0.0"",""metrics"":{""score"":23,""testPassCount"":21,""testFailCount"":4,""assertPassCount"":46,""assertFailCount"":4,""totalLatencyMs"":420539,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""You will classify a customer support ticket into one of the following categories\n<categories>\n    <category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\n</categories>\n\nHere is the customer support ticket:\n<ticket>\n    {{text}}\n</ticket>\n\nRespond with just the label of the category between category tags."",""display"":""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/prompt.txt"",""id"":""51f15ffab806b5e0b34bf91fd11b7fa4085f5538d5228b48a387f5d5cbabc327"",""provider"":""Haiku: T-0.2"",""metrics"":{""score"":23,""testPassCount"":21,""testFailCount"":4,""assertPassCount"":46,""assertFailCount"":4,""totalLatencyMs"":420657,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""You will classify a customer support ticket into one of the following categories\n<categories>\n    <category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\n</categories>\n\nHere is the customer support ticket:\n<ticket>\n    {{text}}\n</ticket>\n\nRespond with just the label of the category between category tags."",""display"":""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/prompt.txt"",""id"":""51f15ffab806b5e0b34bf91fd11b7fa4085f5538d5228b48a387f5d5cbabc327"",""provider"":""Haiku: T-0.4"",""metrics"":{""score"":23,""testPassCount"":21,""testFailCount"":4,""assertPassCount"":46,""assertFailCount"":4,""totalLatencyMs"":420850,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""You will classify a customer support ticket into one of the following categories\n<categories>\n    <category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\n</categories>\n\nHere is the customer support ticket:\n<ticket>\n    {{text}}\n</ticket>\n\nRespond with just the label of the category between category tags."",""display"":""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/prompt.txt"",""id"":""51f15ffab806b5e0b34bf91fd11b7fa4085f5538d5228b48a387f5d5cbabc327"",""provider"":""Haiku: T-0.6"",""metrics"":{""score"":23,""testPassCount"":21,""testFailCount"":4,""assertPassCount"":46,""assertFailCount"":4,""totalLatencyMs"":420791,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""You will classify a customer support ticket into one of the following categories\n<categories>\n    <category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\n</categories>\n\nHere is the customer support ticket:\n<ticket>\n    {{text}}\n</ticket>\n\nRespond with just the label of the category between category tags."",""display"":""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/prompt.txt"",""id"":""51f15ffab806b5e0b34bf91fd11b7fa4085f5538d5228b48a387f5d5cbabc327"",""provider"":""Haiku: T-0.8"",""metrics"":{""score"":23,""testPassCount"":21,""testFailCount"":4,""assertPassCount"":46,""assertFailCount"":4,""totalLatencyMs"":421256,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.0"",""metrics"":{""score"":23.5,""testPassCount"":22,""testFailCount"":3,""assertPassCount"":47,""assertFailCount"":3,""totalLatencyMs"":115658,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.2"",""metrics"":{""score"":23.5,""testPassCount"":22,""testFailCount"":3,""assertPassCount"":47,""assertFailCount"":3,""totalLatencyMs"":97920,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.4"",""metrics"":{""score"":23.5,""testPassCount"":22,""testFailCount"":3,""assertPassCount"":47,""assertFailCount"":3,""totalLatencyMs"":115200,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.6"",""metrics"":{""score"":23,""testPassCount"":22,""testFailCount"":3,""assertPassCount"":46,""assertFailCount"":2,""totalLatencyMs"":98663,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.8"",""metrics"":{""score"":24,""testPassCount"":23,""testFailCount"":2,""assertPassCount"":48,""assertFailCount"":2,""totalLatencyMs"":109069,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.0"",""metrics"":{""score"":25,""testPassCount"":25,""testFailCount"":0,""assertPassCount"":50,""assertFailCount"":0,""totalLatencyMs"":100909,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.2"",""metrics"":{""score"":25,""testPassCount"":25,""testFailCount"":0,""assertPassCount"":50,""assertFailCount"":0,""totalLatencyMs"":98576,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.4"",""metrics"":{""score"":25,""testPassCount"":25,""testFailCount"":0,""assertPassCount"":50,""assertFailCount"":0,""totalLatencyMs"":107460,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.6"",""metrics"":{""score"":25,""testPassCount"":25,""testFailCount"":0,""assertPassCount"":50,""assertFailCount"":0,""totalLatencyMs"":107504,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}","{""raw"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""display"":""from vectordb import VectorDB\n\nvectordb = VectorDB()\n# Load the vector database\nvectordb.load_db()\n\ncategories = \""\""\""<category> \n    <label>Billing Inquiries</label>\n    <content> Questions about invoices, charges, fees, and premiums Requests for clarification on billing statements Inquiries about payment methods and due dates \n    </content> \n</category> \n<category> \n    <label>Policy Administration</label>\n    <content> Requests for policy changes, updates, or cancellations Questions about policy renewals and reinstatements Inquiries about adding or removing coverage options \n    </content> \n</category> \n<category> \n    <label>Claims Assistance</label> \n    <content> Questions about the claims process and filing procedures Requests for help with submitting claim documentation Inquiries about claim status and payout timelines \n    </content> \n</category> \n<category> \n    <label>Coverage Explanations</label> \n    <content> Questions about what is covered under specific policy types Requests for clarification on coverage limits and exclusions Inquiries about deductibles and out-of-pocket expenses \n    </content> \n</category> \n<category> \n    <label>Quotes and Proposals</label> \n    <content> Requests for new policy quotes and price comparisons Questions about available discounts and bundling options Inquiries about switching from another insurer \n    </content> \n</category> \n<category> \n    <label>Account Management</label> \n    <content> Requests for login credentials or password resets Questions about online account features and functionality Inquiries about updating contact or personal information \n    </content> \n</category> \n<category> \n    <label>Billing Disputes</label> \n    <content> Complaints about unexpected or incorrect charges Requests for refunds or premium adjustments Inquiries about late fees or collection notices \n    </content> \n</category> \n<category> \n    <label>Claims Disputes</label> \n    <content> Complaints about denied or underpaid claims Requests for reconsideration of claim decisions Inquiries about appealing a claim outcome \n    </content> \n</category> \n<category> \n    <label>Policy Comparisons</label> \n    <content> Questions about the differences between policy options Requests for help deciding between coverage levels Inquiries about how policies compare to competitors' offerings \n    </content> \n</category> \n<category> \n    <label>General Inquiries</label> \n    <content> Questions about company contact information or hours of operation Requests for general information about products or services Inquiries that don't fit neatly into other categories \n    </content> \n</category>\""\""\""\n\ndef rag_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f\""\""\""\n        <example>\n            <query>\n                {example[\""metadata\""][\""text\""]}\n            </query>\n            <label>\n                {example[\""metadata\""][\""label\""]}\n            </label>\n        </example>\n        \""\""\""\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    Respond with just the label of the category between category tags.\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt\n\n\ndef rag_chain_of_thought_classify(context: dict):\n    X = context['vars']['text']\n    rag = vectordb.search(X,25)\n    rag_string = \""\""\n    for example in rag:\n        rag_string += f'<example>\\n<query>\\n\""{example[\""metadata\""][\""text\""]}\""\\n</query>\\n<label>\\n{example[\""metadata\""][\""label\""]}\\n</label>\\n</example>\\n'\n    prompt = \""\""\""\n    You are an accurate classifier.\n    Given a query, classify it into one of the provided labels.\n    <query>\n        <QUERY>\n    </query>\n\n    <labels>\n        <LABELS>\n    </labels>\n\n    Use the following examples to help you classify the query:\n    <examples>\n        <RAG>\n    </examples>\n\n    First you will think step-by-step about the problem in scratchpad tags.\n    You should consider all the information provided and create a concrete argument for your classification.\n    \n    Respond using this format:\n    <response>\n        <scratchpad>Your thoughts and analysis go here</scratchpad>\n        <category>The category label you chose goes here</category>\n    </response>\n    \""\""\"".replace(\""<LABELS>\"", categories).replace(\""<QUERY>\"", X).replace(\""<RAG>\"", rag_string)\n    return prompt"",""id"":""23a963294ea89ecf729e199ac4ba08184ee5f864a2dfa51456300e8539e0a4f1"",""provider"":""Haiku: T-0.8"",""metrics"":{""score"":24.5,""testPassCount"":24,""testFailCount"":1,""assertPassCount"":49,""assertFailCount"":1,""totalLatencyMs"":90303,""tokenUsage"":{""total"":0,""prompt"":0,""completion"":0,""cached"":0},""namedScores"":{},""cost"":0}}"
Billing Inquiries,"I received a bill for my auto policy renewal, but the amount seems higher than usual. Can you explain why it increased?","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed"
Policy Administration,I want to adjust my coverage limits and deductibles for my homeowners policy. What are my options?,"[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed"
Claims Assistance,"My parked car was hit by another vehicle, but I don't have the other driver's information. How should I proceed with filing a claim?","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed"
Coverage Explanations,I'm confused about the difference between comprehensive and collision coverage. Can you clarify what each one includes?,"[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed"
Quotes and Proposals,I'm considering switching my insurance to your company. Can you provide a quote that matches or beats my current coverage?,"[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed"
Account Management,"I tried to log in to my online account, but it says my password is incorrect. I never changed it, so what could be the issue?","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed"
Billing Disputes,I noticed a charge on my credit card from your company that I don't recognize. It's not my usual premium amount. Can you look into this?,"[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed"
Claims Disputes,"My claim for water damage to my kitchen was denied, but I believe it should be covered under my policy. How can I appeal this decision?","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed"
Policy Comparisons,I'm debating between a high-deductible health plan and a traditional PPO. Can you help me understand the pros and cons of each option?,"[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed"
General Inquiries,"I received a letter in the mail about some changes to my policy, but I'm not sure what they mean. Can you provide more details?","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Policy Administration

Fail Reason: Expected output to contain ""General Inquiries""","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed"
Billing Inquiries,"I recently added a new vehicle to my policy, but my bill doesn't reflect the multi-car discount I was promised. Can you review this?","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Inquiries

Pass Reason: All assertions passed"
Claims Assistance,"I need to file a claim for hail damage to my roof, but I'm not sure if I should file it under my homeowners or separate windstorm policy. What do you recommend?","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Assistance

Pass Reason: All assertions passed"
Coverage Explanations,"My auto policy includes rental car coverage, but I'm unclear on the specific terms. How much is covered per day and per incident?","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed"
Quotes and Proposals,I'm shopping for life insurance and wondering if I should choose term or whole life. Can you explain the difference and help me decide?,"[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals""","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[PASS] (1.00)

Quotes and Proposals

Pass Reason: All assertions passed","[FAIL] (0.50)

Expected output to contain ""Quotes and Proposals""
---
Policy Comparisons

Fail Reason: Expected output to contain ""Quotes and Proposals"""
Account Management,I want to enroll in paperless billing and automatic payments. How do I set this up through my online account?,"[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed","[PASS] (1.00)

Account Management

Pass Reason: All assertions passed"
Billing Disputes,"I think I'm being double-charged for my motorcycle endorsement. My premium went up, but I don't see the charge itemized anywhere. Can you clarify?","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed"
Claims Disputes,The estimate for repairs to my vehicle after an accident is higher than the amount your adjuster approved. How can I dispute this discrepancy?,"[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed"
Policy Comparisons,I'm comparing your small business insurance policies to those of a few other providers. Can you explain how your coverage and pricing stack up against theirs?,"[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed"
General Inquiries,"My agent mentioned something about a ""disappearing deductible"" feature, but I'm not sure what that entails. Could you provide more information?","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed"
Policy Administration,I'm planning to retire soon and want to adjust my life insurance coverage accordingly. What changes should I consider making to my policy?,"[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Administration

Pass Reason: All assertions passed"
Coverage Explanations,"My basement flooded due to a sump pump failure, and I'm not sure if this is covered under my homeowners policy. Can you clarify what water damage is included?","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed","[PASS] (1.00)

Coverage Explanations

Pass Reason: All assertions passed"
Billing Disputes,"I received a cancellation notice for non-payment, but I believe I paid my premium on time. Can you investigate what happened and reinstate my policy?","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Billing Disputes

Pass Reason: All assertions passed"
Claims Disputes,"I took my car to the shop for repairs after an accident, but the repair estimate is much higher than what your appraiser quoted. How should I handle this situation?","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed","[PASS] (1.00)

Claims Disputes

Pass Reason: All assertions passed"
Policy Comparisons,I'm trying to decide between two different health plans with similar premiums but different out-of-pocket maximums. Which one would you recommend based on my medical history?,"[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[FAIL] (0.00)

Error: Error running Python script: IndexError: list index out of range
Stack Trace: Error: IndexError: list index out of range
    at PythonShell.parseError (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:303:21)
    at terminateIfNeeded (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:193:32)
    at Socket.<anonymous> (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:164:17)
    at Socket.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    --Python Traceback: --
    File ""/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/python/wrapper.py"", line 27, in <module>
      result = call_method(script_path, method_name, *data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File ""/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/python/wrapper.py"", line 18, in call_method
      return method_to_call(*args)
             ^^^^^^^^^^^^^^^^^^^^^
    File ""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/transform.py"", line 2, in get_transform
      return output.split(""<category>"")[1].split(""</category>"")[0].strip()
             ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^

Error: Error running Python script: IndexError: list index out of range
Stack Trace: Error: IndexError: list index out of range
    at PythonShell.parseError (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:303:21)
    at terminateIfNeeded (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:193:32)
    at Socket.<anonymous> (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/python-shell/index.js:164:17)
    at Socket.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    --Python Traceback: --
    File ""/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/python/wrapper.py"", line 27, in <module>
      result = call_method(script_path, method_name, *data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File ""/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/python/wrapper.py"", line 18, in call_method
      return method_to_call(*args)
             ^^^^^^^^^^^^^^^^^^^^^
    File ""/Users/garvan/code/anthropic-cookbook/evals/classification/evaluation/transform.py"", line 2, in get_transform
      return output.split(""<category>"")[1].split(""</category>"")[0].strip()
             ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
    at runPython (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/python/wrapper.js:48:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async transformOutput (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/util.js:1059:17)
    at async Evaluator.runEval (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/evaluator.js:329:48)
    at async processEvalStep (/Users/garvan/.npm/_npx/81bbc6515d992ace/node_modules/promptfoo/dist/src/evaluator.js:594:25)
---","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed","[PASS] (1.00)

Policy Comparisons

Pass Reason: All assertions passed"
General Inquiries,Can you explain how your accident forgiveness program works and what the eligibility requirements are?,"[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[FAIL] (0.50)

Expected output to contain ""General Inquiries""
---
Coverage Explanations

Fail Reason: Expected output to contain ""General Inquiries""","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed","[PASS] (1.00)

General Inquiries

Pass Reason: All assertions passed"
